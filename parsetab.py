
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUALSrightNAMErightNUMPYPOINTleftPLUSMINUSleftTIMESDIVIDErightUMINUSAND ARANGE ARRAY COMA DIFERENTE DIGUAL DIVIDE DIVIDE_INT DOSPUNTOS ELSE EQUALS IF LINE LIST LPAREN MAYORQUE MEAN MENORQUE MINUS NAME NUMBER NUMPY OR PLUS POINT POTENCY PRINT RESHAPE RPAREN STR SUM TAB TIMESstatement : expression\n                 | expresasign statement : TAB PRINT LPAREN STR COMA expression RPAREN\n            | PRINT LPAREN STR COMA expression RPAREN\n            | PRINT LPAREN expression RPAREN\n            | TAB PRINT LPAREN expression RPAREN   statement : PRINT\n             | PRINT expression\n             | PRINT LPAREN expression\n             | PRINT LPAREN\n             | PRINT TAB expressionexpresasign : NAME EQUALS expression\n                   | NAME EQUALS exprenumpyexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression POTENCY expression\n                  | expression DIVIDE_INT expression condition : expression DIGUAL expression\n    | expression DIFERENTE expression\n    | expression MAYORQUE expression\n    | expression MENORQUE expression\n    | condition TAB AND TAB condition\n    | condition TAB OR TAB condition  statement : IF LPAREN condition RPAREN DOSPUNTOS\n     statement : IF LPAREN condition RPAREN\n    | IF TAB condition DOSPUNTOS\n    | IF LPAREN condition\n    | IF LPAREN \n    | IF LPAREN expression\n    | IF LPAREN condition DOSPUNTOS  statement : ELSE DOSPUNTOS  \n    statement : ELSE\n    \n    exprenumpy : NUMPY POINT numpyfuncnumpyfunc : ARRAY numpyarg\n                 | SUM numpyarg\n                 | RESHAPE numpyarg\n                 | MEAN numpyarg\n                 | ARANGE numpyarg\n                 | ARANGE numpyarg_error numpyarg : LPAREN NUMBER RPAREN\n                | LPAREN NAME RPAREN\n     numpyarg_error : LPAREN STR RPAREN\n                        | LPAREN LIST RPAREN\n                        | LPAREN RPAREN   expression : MINUS expression %prec UMINUSexpression : NUMBERexpression : STRexpression : LISTexpression : LPAREN expression RPARENexpression : NAME'
    
_lr_action_items = {'TAB':([0,5,7,8,11,12,24,29,31,32,33,34,35,36,41,42,44,66,67,68,69,70,71,91,92,],[4,23,-49,27,-48,-50,-52,-47,-14,-15,-16,-17,-18,-19,-51,55,55,80,81,-20,-21,-22,-23,55,55,]),'PRINT':([0,4,],[5,20,]),'IF':([0,],[8,]),'ELSE':([0,],[9,]),'MINUS':([0,2,5,6,7,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,46,49,50,51,52,56,57,58,59,62,64,68,69,70,71,78,80,81,],[10,15,10,10,-49,10,-48,-50,-52,10,10,10,10,10,10,10,15,10,-52,15,10,10,-47,10,-14,-15,-16,-17,15,15,10,-49,15,15,-51,15,15,15,-49,15,10,-51,10,10,10,10,10,15,15,15,15,15,15,10,10,]),'NUMBER':([0,5,6,10,14,15,16,17,18,19,21,23,26,27,30,37,51,56,57,58,59,62,80,81,83,89,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,93,93,]),'STR':([0,5,6,10,14,15,16,17,18,19,21,23,26,27,30,37,51,56,57,58,59,62,80,81,89,],[7,7,7,7,7,7,7,7,7,7,38,7,7,7,7,49,7,7,7,7,7,7,7,7,96,]),'LIST':([0,5,6,10,14,15,16,17,18,19,21,23,26,27,30,37,51,56,57,58,59,62,80,81,89,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,97,]),'LPAREN':([0,5,6,8,10,14,15,16,17,18,19,20,21,23,26,27,30,37,51,56,57,58,59,62,73,74,75,76,77,80,81,],[6,21,6,26,6,6,6,6,6,6,6,37,6,6,6,6,6,6,6,6,6,6,6,6,83,83,83,83,89,6,6,]),'NAME':([0,5,6,10,14,15,16,17,18,19,21,23,26,27,30,37,51,56,57,58,59,62,80,81,83,89,],[13,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,94,94,]),'$end':([1,2,3,5,7,9,11,12,13,21,22,24,26,28,29,31,32,33,34,35,36,38,39,40,41,42,43,46,47,52,53,54,60,63,65,68,69,70,71,72,79,82,84,85,86,87,88,90,91,92,95,98,99,100,101,],[0,-1,-2,-7,-49,-34,-48,-50,-52,-10,-8,-52,-30,-33,-47,-14,-15,-16,-17,-18,-19,-49,-9,-11,-51,-29,-31,-12,-13,-5,-27,-32,-28,-6,-26,-20,-21,-22,-23,-35,-4,-36,-37,-38,-39,-40,-41,-3,-24,-25,-46,-42,-43,-44,-45,]),'PLUS':([2,7,11,12,13,22,24,25,29,31,32,33,34,35,36,38,39,40,41,43,45,46,49,50,52,64,68,69,70,71,78,],[14,-49,-48,-50,-52,14,-52,14,-47,-14,-15,-16,-17,14,14,-49,14,14,-51,14,14,14,-49,14,-51,14,14,14,14,14,14,]),'TIMES':([2,7,11,12,13,22,24,25,29,31,32,33,34,35,36,38,39,40,41,43,45,46,49,50,52,64,68,69,70,71,78,],[16,-49,-48,-50,-52,16,-52,16,-47,16,16,-16,-17,16,16,-49,16,16,-51,16,16,16,-49,16,-51,16,16,16,16,16,16,]),'DIVIDE':([2,7,11,12,13,22,24,25,29,31,32,33,34,35,36,38,39,40,41,43,45,46,49,50,52,64,68,69,70,71,78,],[17,-49,-48,-50,-52,17,-52,17,-47,17,17,-16,-17,17,17,-49,17,17,-51,17,17,17,-49,17,-51,17,17,17,17,17,17,]),'POTENCY':([2,7,11,12,13,22,24,25,29,31,32,33,34,35,36,38,39,40,41,43,45,46,49,50,52,64,68,69,70,71,78,],[18,-49,-48,-50,-52,18,-52,18,-47,-14,-15,-16,-17,18,18,-49,18,18,-51,18,18,18,-49,18,-51,18,18,18,18,18,18,]),'DIVIDE_INT':([2,7,11,12,13,22,24,25,29,31,32,33,34,35,36,38,39,40,41,43,45,46,49,50,52,64,68,69,70,71,78,],[19,-49,-48,-50,-52,19,-52,19,-47,-14,-15,-16,-17,19,19,-49,19,19,-51,19,19,19,-49,19,-51,19,19,19,19,19,19,]),'RPAREN':([7,11,12,24,25,29,31,32,33,34,35,36,38,39,41,42,49,50,64,68,69,70,71,78,89,91,92,93,94,96,97,],[-49,-48,-50,-52,41,-47,-14,-15,-16,-17,-18,-19,-49,52,-51,53,-49,63,79,-20,-21,-22,-23,90,95,-24,-25,98,99,100,101,]),'DIGUAL':([7,11,12,24,29,31,32,33,34,35,36,41,43,45,],[-49,-48,-50,-52,-47,-14,-15,-16,-17,-18,-19,-51,56,56,]),'DIFERENTE':([7,11,12,24,29,31,32,33,34,35,36,41,43,45,],[-49,-48,-50,-52,-47,-14,-15,-16,-17,-18,-19,-51,57,57,]),'MAYORQUE':([7,11,12,24,29,31,32,33,34,35,36,41,43,45,],[-49,-48,-50,-52,-47,-14,-15,-16,-17,-18,-19,-51,58,58,]),'MENORQUE':([7,11,12,24,29,31,32,33,34,35,36,41,43,45,],[-49,-48,-50,-52,-47,-14,-15,-16,-17,-18,-19,-51,59,59,]),'DOSPUNTOS':([7,9,11,12,24,29,31,32,33,34,35,36,41,42,44,53,68,69,70,71,91,92,],[-49,28,-48,-50,-52,-47,-14,-15,-16,-17,-18,-19,-51,54,60,65,-20,-21,-22,-23,-24,-25,]),'EQUALS':([13,],[30,]),'NUMPY':([30,],[48,]),'COMA':([38,49,],[51,62,]),'POINT':([48,],[61,]),'AND':([55,],[66,]),'OR':([55,],[67,]),'ARRAY':([61,],[73,]),'SUM':([61,],[74,]),'RESHAPE':([61,],[75,]),'MEAN':([61,],[76,]),'ARANGE':([61,],[77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,5,6,10,14,15,16,17,18,19,21,23,26,27,30,37,51,56,57,58,59,62,80,81,],[2,22,25,29,31,32,33,34,35,36,39,40,43,45,46,50,64,68,69,70,71,78,45,45,]),'expresasign':([0,],[3,]),'condition':([26,27,80,81,],[42,44,91,92,]),'exprenumpy':([30,],[47,]),'numpyfunc':([61,],[72,]),'numpyarg':([73,74,75,76,77,],[82,84,85,86,87,]),'numpyarg_error':([77,],[88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','lex.py',143),
  ('statement -> expresasign','statement',1,'p_statement_expr','lex.py',144),
  ('statement -> TAB PRINT LPAREN STR COMA expression RPAREN','statement',7,'p_print','lex.py',152),
  ('statement -> PRINT LPAREN STR COMA expression RPAREN','statement',6,'p_print','lex.py',153),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_print','lex.py',154),
  ('statement -> TAB PRINT LPAREN expression RPAREN','statement',5,'p_print','lex.py',155),
  ('statement -> PRINT','statement',1,'p_print_error','lex.py',159),
  ('statement -> PRINT expression','statement',2,'p_print_error','lex.py',160),
  ('statement -> PRINT LPAREN expression','statement',3,'p_print_error','lex.py',161),
  ('statement -> PRINT LPAREN','statement',2,'p_print_error','lex.py',162),
  ('statement -> PRINT TAB expression','statement',3,'p_print_error','lex.py',163),
  ('expresasign -> NAME EQUALS expression','expresasign',3,'p_statement_assign','lex.py',169),
  ('expresasign -> NAME EQUALS exprenumpy','expresasign',3,'p_statement_assign','lex.py',170),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','lex.py',174),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','lex.py',175),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','lex.py',176),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','lex.py',177),
  ('expression -> expression POTENCY expression','expression',3,'p_expression_binop','lex.py',178),
  ('expression -> expression DIVIDE_INT expression','expression',3,'p_expression_binop','lex.py',179),
  ('condition -> expression DIGUAL expression','condition',3,'p_condition','lex.py',194),
  ('condition -> expression DIFERENTE expression','condition',3,'p_condition','lex.py',195),
  ('condition -> expression MAYORQUE expression','condition',3,'p_condition','lex.py',196),
  ('condition -> expression MENORQUE expression','condition',3,'p_condition','lex.py',197),
  ('condition -> condition TAB AND TAB condition','condition',5,'p_condition','lex.py',198),
  ('condition -> condition TAB OR TAB condition','condition',5,'p_condition','lex.py',199),
  ('statement -> IF LPAREN condition RPAREN DOSPUNTOS','statement',5,'p_if','lex.py',202),
  ('statement -> IF LPAREN condition RPAREN','statement',4,'p_if_error','lex.py',206),
  ('statement -> IF TAB condition DOSPUNTOS','statement',4,'p_if_error','lex.py',207),
  ('statement -> IF LPAREN condition','statement',3,'p_if_error','lex.py',208),
  ('statement -> IF LPAREN','statement',2,'p_if_error','lex.py',209),
  ('statement -> IF LPAREN expression','statement',3,'p_if_error','lex.py',210),
  ('statement -> IF LPAREN condition DOSPUNTOS','statement',4,'p_if_error','lex.py',211),
  ('statement -> ELSE DOSPUNTOS','statement',2,'p_else','lex.py',218),
  ('statement -> ELSE','statement',1,'p_else_error','lex.py',222),
  ('exprenumpy -> NUMPY POINT numpyfunc','exprenumpy',3,'p_expresion_numpy','lex.py',229),
  ('numpyfunc -> ARRAY numpyarg','numpyfunc',2,'p_numpyfuncion','lex.py',234),
  ('numpyfunc -> SUM numpyarg','numpyfunc',2,'p_numpyfuncion','lex.py',235),
  ('numpyfunc -> RESHAPE numpyarg','numpyfunc',2,'p_numpyfuncion','lex.py',236),
  ('numpyfunc -> MEAN numpyarg','numpyfunc',2,'p_numpyfuncion','lex.py',237),
  ('numpyfunc -> ARANGE numpyarg','numpyfunc',2,'p_numpyfuncion','lex.py',238),
  ('numpyfunc -> ARANGE numpyarg_error','numpyfunc',2,'p_numpyfuncion','lex.py',239),
  ('numpyarg -> LPAREN NUMBER RPAREN','numpyarg',3,'p_numpyarg','lex.py',245),
  ('numpyarg -> LPAREN NAME RPAREN','numpyarg',3,'p_numpyarg','lex.py',246),
  ('numpyarg_error -> LPAREN STR RPAREN','numpyarg_error',3,'p_numpyarg_error','lex.py',252),
  ('numpyarg_error -> LPAREN LIST RPAREN','numpyarg_error',3,'p_numpyarg_error','lex.py',253),
  ('numpyarg_error -> LPAREN RPAREN','numpyarg_error',2,'p_numpyarg_error','lex.py',254),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','lex.py',258),
  ('expression -> NUMBER','expression',1,'p_expression_number','lex.py',263),
  ('expression -> STR','expression',1,'p_expresion_str','lex.py',267),
  ('expression -> LIST','expression',1,'p_expresion_list','lex.py',271),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','lex.py',275),
  ('expression -> NAME','expression',1,'p_expression_name','lex.py',279),
]
